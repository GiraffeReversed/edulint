ignore-infile-config-for = ["flake8", "pylint"]

[pylint]
enable = [
    "use-augmented-assign",
    "no-else-return",
    "redefined-builtin",
    "use-foreach",
    "simplifiable-if-return",
    "simplifiable-if-nested",
    "unused-argument",
    "use-early-return",
    "use-for-loop",
    "simplifiable-if-seq",
    "duplicate-if-branches",
    "redefined-outer-name",
    "no-is-bool",
    "no-else-break",
    "redundant-elif",
    "no-else-continue",
    "redundant-arithmetic",
    "unreachable",
    "duplicate-value",
    "use-literal-letter",
    "use-ord-letter",
    "simplifiable-if-expr",
    "simplifiable-if-pass",
    "modifying-iterated-structure",
    "no-loop-else",
    "use-integral-division",
    "pointless-statement",
    "no-while-true",
    "simplifiable-if-assignment",
    "attribute-defined-outside-init",
    "loop-shadows-control-variable",
    "changing-control-variable",
    "self-assigning-variable",
    "dangerous-default-value",
    "comparison-of-constants",
    "comparison-with-itself",
    "remove-for",
    "no-global-vars",
    "simplifiable-condition",
    "condition-evals-to-constant",
    "unreachable-else",
    "non-ascii-name",
    "no-self-argument",
    "comparison-with-callable",
    "for-target-subscript",
    "function-redefined",
    "missing-parentheses-for-call-in-test",
    "duplicate-key"
]

[flake8]
select = [
    "E302",  # expected 2 blank lines, found 0
    "E303",  # too many blank lines (3)
    "E501",  # line too long (82 > 79 characters)
    "E231",  # missing whitespace after ‘,’, ‘;’, or ‘:’
    "F841",  # local variable name is assigned to but never used
    "E225",  # missing whitespace around operator
    "E305",  # expected 2 blank lines after end of function or class
    "E211",  # whitespace before ‘(’
    "E999",  # Syntax error
    "E117",  # over-indented
    "E203",  # whitespace before ‘:’
    "F821",  # undefined name name
    "E301",  # expected 1 blank line, found 0
    "E112",  # expected an indented block
    "E741",  # do not use variables named ‘l’, ‘O’, or ‘I’
    "E712",  # comparison to True should be ‘if cond is True:’ or ‘if cond:’
    "E228",  # missing whitespace around modulo operator
    "E202",  # whitespace before ‘)’
    "E115",  # expected an indented block (comment)
    "E125",  # continuation line with same indent as next logical line
    "E201",  # whitespace after ‘(’
    "W191",  # indentation contains tabs
    "E101",  # indentation contains mixed spaces and tabs
    "E114",  # indentation is not a multiple of four (comment)
    "E113",  # unexpected indentation
    "E129",  # visually indented line with same indent as next logical line
    "E902",  # IOError
    "W605",  # invalid escape sequence ‘x’
    "E122",  # continuation line missing indentation or outdented
    "F811",  # redefinition of unused name from line N
    "E227",  # missing whitespace around bitwise or shift operator
    "E251",  # unexpected spaces around keyword / parameter equals
    "E306",  # expected 1 blank line before a nested definition
    "E131",  # continuation line unaligned for hanging indent
    "E252",  # missing whitespace around parameter equals
    "F632",  # use ==/!= to compare str, bytes, and int literals
    "F823",  # local variable name … referenced before assignment
    "E223",  # tab before operator
    "E224",  # tab after operator
    "E273",  # tab after keyword
    "E274",  # tab before keyword
    "E275",  # missing whitespace after keyword
    "E742",  # do not define classes named ‘l’, ‘O’, or ‘I’
    "E743",  # do not define functions named ‘l’, ‘O’, or ‘I’
    "E901",  # SyntaxError or IndentationError
    "F404",  # future import(s) name after other statements
    "F406",  # ‘from module import *’ only allowed at module level
    "F407",  # an undefined __future__ feature name was imported
    "F501",  # invalid % format literal
    "F502",  # % format expected mapping but got sequence
    "F503",  # % format expected sequence but got mapping
    "F504",  # % format unused named arguments
    "F505",  # % format missing named arguments
    "F506",  # % format mixed positional and named arguments
    "F507",  # % format mismatch of placeholder and argument count
    "F508",  # % format with * specifier requires a sequence
    "F509",  # % format with unsupported format character
    "F521",  # .format(...) invalid format string
    "F522",  # .format(...) unused named arguments
    "F523",  # .format(...) unused positional arguments
    "F524",  # .format(...) missing argument
    "F525",  # .format(...) mixing automatic and manual numbering
    "F602",  # dictionary key variable name repeated with different values
    "F621",  # too many expressions in an assignment with star-unpacking
    "F622",  # two or more starred expressions in an assignment (a, *b, *c = d)
    "F631",  # assertion test is a tuple, which is always True
    "F633",  # use of >> is invalid with print function
    "F634",  # if test is a tuple, which is always True
    "F701",  # a break statement outside of a while or for loop
    "F702",  # a continue statement outside of a while or for loop
    "F703",  # a continue statement in a finally block in a loop
    "F704",  # a yield or yield from statement outside of a function
    "F705",  # a return statement with arguments inside a generator
    "F706",  # a return statement outside of a function/method
    "F707",  # an except: block as not the last exception handler
    "F721",  # syntax error in doctest
    "F722",  # syntax error in forward annotation
    "F723",  # syntax error in type comment
    "F822",  # undefined name name in __all__
    "F831",  # duplicate argument name in function definition
    "F901",  # raise NotImplemented should be raise NotImplementedError
]
max-line-length = 100

[translations.enhancement.flake8]
select = [
    "F401",  # module imported but unused
    "E701",  # multiple statements on one line (colon)
    "E116",  # unexpected indentation (comment)
    "E702",  # multiple statements on one line (semicolon)
]
