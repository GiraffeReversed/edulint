export-groups = ["python-specific", "enhancement", "complexity"]

[pylint]
load-plugins = [
    "edulint.linting.analyses.patcher",
    "edulint.linting.checkers.basic_checker",
    "edulint.linting.checkers.local_defects",
    "edulint.linting.checkers.unsuited_loop",
    "edulint.linting.checkers.simplifiable_if",
    "edulint.linting.checkers.python_ta_checkers",
    "edulint.linting.checkers.duplication.checker",
]
disable = "all"
enable = "noop" # pylint fails with usage error (returns 32) if it is run with all checks disabled
good-names = "_"
module-naming-style = "any"

[flake8]
ignore = "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z"

[translations.python-specific.pylint]
enable = [
    "unidiomatic-typecheck",
    "misplaced-format-function",
    "use-enumerate",
    "consider-iterating-dictionary",
    "consider-using-dict-items",
    "consider-using-f-string",
    "inconsistent-return-statements",
    "consider-swap-variables",
    "consider-using-join",
    "consider-using-set-comprehension",
    "unnecessary-comprehension",
    "use-a-generator",
    "use-list-literal",
    "use-dict-literal",
    "consider-using-in",
]

[translations.enhancement.pylint]
enable = [
    "no-self-use",
    "superfluous-parens",
    "consider-using-min-builtin",
    "consider-using-max-builtin",
    "consider-using-with",
    "unspecified-encoding",
    "loop-shadows-control-variable",
    "no-repeated-op",
    "forbidden-top-level-code",
    "simplifiable-if-nested",
    "simplifiable-if-seq",
    "simplifiable-if-return-conj",
    "simplifiable-if-assignment-conj",
    "simplifiable-if-expr-conj",
]

[translations.complexity.pylint]
enable = [
    "too-many-arguments",
    "too-many-branches",
    "too-many-statements",
    "too-many-return-statements",
    "too-many-nested-blocks",
    "too-many-locals",
    "too-many-boolean-expressions",
]

[translations.allowed-onechar-names.pylint]
bad-names-rgxs = "^[a-z]$"
enable = "disallowed-name"
