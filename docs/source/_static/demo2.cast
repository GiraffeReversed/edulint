{"version": 2, "width": 210, "height": 22, "timestamp": 1683644830, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.033262, "o", "\u001b]0;demo@edulint: /app\u0007\u001b[01;32mdemo@edulint\u001b[00m:\u001b[01;34m/app\u001b[00m$ "]
[2.487775, "o", "p"]
[2.592261, "o", "y"]
[2.791754, "o", "t"]
[2.90451, "o", "h"]
[3.095764, "o", "o"]
[3.25563, "o", "n"]
[4.111759, "o", "3"]
[4.352019, "o", " "]
[4.591951, "o", "-"]
[5.087751, "o", "m"]
[5.23168, "o", " "]
[5.343759, "o", "p"]
[5.55025, "o", "i"]
[5.710269, "o", "p"]
[5.854204, "o", " "]
[5.990361, "o", "i"]
[6.134237, "o", "n"]
[6.206374, "o", "s"]
[6.350887, "o", "t"]
[6.414199, "o", "a"]
[6.534173, "o", "l"]
[6.678272, "o", "l"]
[6.798216, "o", " "]
[7.198143, "o", "-"]
[7.350252, "o", "-"]
[7.790206, "o", "u"]
[7.878853, "o", "s"]
[7.918224, "o", "e"]
[8.118192, "o", "r"]
[8.222933, "o", " "]
[8.606252, "o", "-"]
[8.806241, "o", "-"]
[9.166284, "o", "q"]
[9.382229, "o", "u"]
[9.550322, "o", "i"]
[9.774276, "o", "e"]
[10.022139, "o", "t"]
[10.26213, "o", " "]
[10.622224, "o", "e"]
[11.054153, "o", "d"]
[11.166221, "o", "u"]
[11.374215, "o", "l"]
[11.550308, "o", "i"]
[11.67029, "o", "n"]
[11.774216, "o", "t"]
[12.262338, "o", "\r\n"]
[13.581512, "o", "\u001b]0;demo@edulint: /app\u0007\u001b[01;32mdemo@edulint\u001b[00m:\u001b[01;34m/app\u001b[00m$ "]
[14.966174, "o", "c"]
[15.014429, "o", "a"]
[15.166171, "o", "t"]
[15.238179, "o", " "]
[15.342954, "o", "e"]
[15.574312, "o", "x"]
[15.699855, "o", "ample.py "]
[16.110225, "o", "\r\n"]
[16.112192, "o", "# edulint: enhancement python-spec allowed-onechar-names=\r\r\n\r\r\ndef is_a(ch):\r\r\n    if ch == \"a\" or ch == \"A\":\r\r\n        return True\r\r\n    else:\r\r\n        return False\r\r\n\r\r\n\r\r\ndef count_a(text):\r\r\n    a=0\r\r\n    for i in range(len(text)):\r\r\n        if is_a(text[i]):\r\r\n            a=a+1\r\r\n    return a\r\r\n"]
[16.112725, "o", "\u001b]0;demo@edulint: /app\u0007\u001b[01;32mdemo@edulint\u001b[00m:\u001b[01;34m/app\u001b[00m$ "]
[18.126297, "o", "p"]
[18.190258, "o", "y"]
[18.334219, "o", "t"]
[18.422014, "o", "h"]
[18.558238, "o", "o"]
[18.702198, "o", "n"]
[19.26206, "o", "3"]
[19.486213, "o", " "]
[19.718323, "o", "-"]
[20.174142, "o", "m"]
[20.254712, "o", " "]
[20.398208, "o", "e"]
[20.502173, "o", "d"]
[20.638159, "o", "u"]
[20.833929, "o", "lint "]
[21.538196, "o", "check "]
[22.354136, "o", "example.py "]
[22.422158, "o", "\r\n"]
[23.166997, "o", "example.py:4:4: R6201 The if statement can be replaced with 'return ch == 'a' or ch == 'A''\r\nexample.py:4:7: R1714 Consider merging these comparisons with \"in\" to \"ch in 'aA'\"\r\nexample.py:11:4: C0104 Disallowed single-character variable name \"a\", choose a more descriptive name\r\nexample.py:11:6: E225 missing whitespace around operator\r\nexample.py:12:4: R6101 Iterate directly: \"for var in text\" (with appropriate name for \"var\")\r\nexample.py:14:12: R6609 Use augmenting assignment: 'a += 1'\r\n"]
[23.17498, "o", "\u001b]0;demo@edulint: /app\u0007\u001b[01;32mdemo@edulint\u001b[00m:\u001b[01;34m/app\u001b[00m$ "]
